<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>leblancfg.com - François Leblanc</title><link>https://leblancfg.com/</link><description>Data Science, Geospatial Python, Space Stuff</description><lastBuildDate>Wed, 07 Dec 2022 00:00:00 -0500</lastBuildDate><item><title>The Data Bus: a helpful pattern for data engineering</title><link>https://leblancfg.com/data-bus-pattern-for-data-engineering.html</link><description>&lt;p&gt;The Data Bus is a pattern that can help you tidy up data flows, and helps to keep track of the preprocessing steps taken. It is a simple, language-agnostic pattern that can be used to make sense when multiple transform steps are involved.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">François Leblanc</dc:creator><pubDate>Wed, 07 Dec 2022 00:00:00 -0500</pubDate><guid isPermaLink="false">tag:leblancfg.com,2022-12-07:/data-bus-pattern-for-data-engineering.html</guid><category>Data Engineering</category><category>etl</category><category>data engineering</category><category>data bus</category></item><item><title>Benchmarks for writing pandas DataFrames to SQL Server (ODBC)</title><link>https://leblancfg.com/benchmarks_writing_pandas_dataframe_SQL_Server.html</link><description>&lt;p&gt;In this article, we benchmark various methods to write data to MS SQL Server from pandas DataFrames to see which is the fastest. We compare &lt;code&gt;multi&lt;/code&gt;, &lt;code&gt;fast_executemany&lt;/code&gt; and &lt;code&gt;turbodbc&lt;/code&gt;, and find the best candidate.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">François Leblanc</dc:creator><pubDate>Sun, 15 Mar 2020 00:00:00 -0400</pubDate><guid isPermaLink="false">tag:leblancfg.com,2020-03-15:/benchmarks_writing_pandas_dataframe_SQL_Server.html</guid><category>Python, SQL, MS</category><category>python</category><category>SQL Server</category></item><item><title>CrossFit Open 2019 Analysis - Exercise Statistics</title><link>https://leblancfg.com/crossfit_open_2019_analysis_exercise_statistics.html</link><description>&lt;p&gt;In this article, we take a deeper dive into the benchmark exercise times and weights for the 2019 CrossFit Open athletes, including sprinting, running, squat, deadlift, clean &amp;amp; jerk, and snatch.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">François Leblanc</dc:creator><pubDate>Sun, 30 Jun 2019 00:00:00 -0400</pubDate><guid isPermaLink="false">tag:leblancfg.com,2019-06-30:/crossfit_open_2019_analysis_exercise_statistics.html</guid><category>CrossFit, Python</category><category>crossfit</category><category>python</category><category>summary statistics</category><category>athlete</category></item><item><title>CrossFit Open 2019 Analysis - Benchmark Workouts</title><link>https://leblancfg.com/crossfit_open_2019_analysis_benchmark_workouts.html</link><description>&lt;p&gt;In this final article on 2019 CrossFit Open athlete statistics, we take a look at the spread of times for CrossFit's iconic workouts from athlete profile pages: Fran, Grace, Helen, Filthy Fifty, and Fight Gone Bad.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">François Leblanc</dc:creator><pubDate>Sat, 15 Jun 2019 00:00:00 -0400</pubDate><guid isPermaLink="false">tag:leblancfg.com,2019-06-15:/crossfit_open_2019_analysis_benchmark_workouts.html</guid><category>CrossFit, Python</category><category>crossfit</category><category>python</category><category>summary statistics</category><category>athlete</category></item><item><title>CrossFit Open 2019 Analysis - Athlete Statistics</title><link>https://leblancfg.com/crossfit_open_2019_analysis_athlete_statistics.html</link><description>&lt;p&gt;In this article, we disect the various physical, strength and athletic attributes of hundreds of thousands of 2019 CrossFit Open athletes as self-reported in their athlete profiles.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">François Leblanc</dc:creator><pubDate>Sat, 01 Jun 2019 00:00:00 -0400</pubDate><guid isPermaLink="false">tag:leblancfg.com,2019-06-01:/crossfit_open_2019_analysis_athlete_statistics.html</guid><category>CrossFit, Python</category><category>crossfit</category><category>python</category><category>summary statistics</category><category>athlete</category></item><item><title>Installing the Azure CLI on Manjaro (Arch) with Anaconda</title><link>https://leblancfg.com/installing-azure-cli-on-manjaro-arch-with-anaconda.html</link><description>&lt;p&gt;A short guide to troubleshooting the installation of Microsoft's Azure Command Line Interface (CLI) on Manjaro Linux&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">François Leblanc</dc:creator><pubDate>Mon, 03 Dec 2018 00:00:00 -0500</pubDate><guid isPermaLink="false">tag:leblancfg.com,2018-12-03:/installing-azure-cli-on-manjaro-arch-with-anaconda.html</guid><category>Linux</category><category>linux</category><category>manjaro</category><category>arch</category><category>azure</category><category>cli</category></item><item><title>Unhashable in Python - Getting the unique number of locations in a GeoDataFrame</title><link>https://leblancfg.com/unhashable-python-unique-locations-geometry-geodataframe.html</link><description>&lt;p&gt;I encounter an unhashable type error when trying to get the unique number of geometries in a GeoDataFrame, and we learn about mutability (vs immutability) of Python objects in order to sidestep the issue.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">François Leblanc</dc:creator><pubDate>Fri, 14 Sep 2018 00:00:00 -0400</pubDate><guid isPermaLink="false">tag:leblancfg.com,2018-09-14:/unhashable-python-unique-locations-geometry-geodataframe.html</guid><category>Python</category><category>python</category><category>mutability</category><category>shapely</category><category>geopandas</category></item><item><title>Notes on installing CUDA, CuDNN and Tensorflow on Manjaro</title><link>https://leblancfg.com/installing-cuda-cudnn-tensorflow-nvidia-gtx960.html</link><description>&lt;p&gt;An in-depth, step-by-step guide to installing CUDA, CuDNN and Tensorflow on Linux with an NVIDIA GeFORCE GTX960 graphics card.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">François Leblanc</dc:creator><pubDate>Fri, 24 Aug 2018 00:00:00 -0400</pubDate><guid isPermaLink="false">tag:leblancfg.com,2018-08-24:/installing-cuda-cudnn-tensorflow-nvidia-gtx960.html</guid><category>Linux</category><category>linux</category><category>manjaro</category><category>cuda</category><category>cudnn</category><category>tensorflow</category><category>GPU</category><category>nvidia</category><category>GTX960</category></item><item><title>Higher-level functions in Python, Part 3 - filter</title><link>https://leblancfg.com/higher-level-functions-python-filter.html</link><description>&lt;p&gt;In our final installment for the Higher Level Function in Python Series, we dive into the Python &lt;code&gt;filter&lt;/code&gt; function. No sidetracks this time around. We simply take a look at how it's used, try to find a way where it would be superior to list comprehensions, fail, and conclude the series.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">François Leblanc</dc:creator><pubDate>Thu, 14 Jun 2018 00:00:00 -0400</pubDate><guid isPermaLink="false">tag:leblancfg.com,2018-06-14:/higher-level-functions-python-filter.html</guid><category>Python</category><category>python</category><category>jupyter</category><category>functional</category><category>benchmarks</category><category>numpy</category></item><item><title>Higher-level functions in Python, Part 2 - reduce</title><link>https://leblancfg.com/higher-level-functions-python-reduce.html</link><description>&lt;p&gt;We go through uses of the Python &lt;code&gt;reduce&lt;/code&gt; function, when it's useful and its performance benefits. This time, we spend some time exploring function composition, and how to manage large function chains, e.g. in a data processing pipeline.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">François Leblanc</dc:creator><pubDate>Mon, 04 Jun 2018 00:00:00 -0400</pubDate><guid isPermaLink="false">tag:leblancfg.com,2018-06-04:/higher-level-functions-python-reduce.html</guid><category>Python</category><category>python</category><category>jupyter</category><category>functional</category><category>benchmarks</category><category>numpy</category></item><item><title>Higher-level functions in Python, Part 1 - map</title><link>https://leblancfg.com/higher-level-functions-python-map.html</link><description>&lt;p&gt;We go through uses of the Python &lt;code&gt;map&lt;/code&gt; function, when it's useful and its performance benefits, and get sidetracked into benchmarking different syntaxes for exponential expressions.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">François Leblanc</dc:creator><pubDate>Wed, 30 May 2018 00:00:00 -0400</pubDate><guid isPermaLink="false">tag:leblancfg.com,2018-05-30:/higher-level-functions-python-map.html</guid><category>Python</category><category>python</category><category>jupyter</category><category>functional</category><category>benchmarks</category><category>numpy</category></item><item><title>Introduction to the Python Scientific Ecosystem, Part 2</title><link>https://leblancfg.com/getting-started-with-python-and-jupyter-notebooks-2.html</link><description>&lt;p&gt;A general primer on Python for science and engineering, with an emphasis on the SciPy ecosystem of packages.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">François Leblanc</dc:creator><pubDate>Thu, 10 Aug 2017 00:00:00 -0400</pubDate><guid isPermaLink="false">tag:leblancfg.com,2017-08-10:/getting-started-with-python-and-jupyter-notebooks-2.html</guid><category>Python</category><category>python</category><category>jupyter</category><category>anaconda</category><category>conda</category><category>scipy</category><category>numpy</category><category>beginner</category><category>matplotlib</category></item><item><title>Introduction to the Python Scientific Ecosystem, Part 1</title><link>https://leblancfg.com/getting-started-with-python-and-jupyter-notebooks-1.html</link><description>&lt;p&gt;A general primer on Python for science and engineering, with an emphasis on the SciPy ecosystem of packages.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">François Leblanc</dc:creator><pubDate>Thu, 03 Aug 2017 00:00:00 -0400</pubDate><guid isPermaLink="false">tag:leblancfg.com,2017-08-03:/getting-started-with-python-and-jupyter-notebooks-1.html</guid><category>Python</category><category>python</category><category>jupyter</category><category>anaconda</category><category>conda</category><category>scipy</category><category>numpy</category><category>beginner</category><category>matplotlib</category></item></channel></rss>